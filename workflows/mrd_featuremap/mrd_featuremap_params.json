{
  "MRDFeatureMap.base_file_name": {
    "description": "Base file name for output files.",
    "optional": false
  },
  "MRDFeatureMap.cfdna_featuremap": {
    "description": "FeatureMap file generated from the cfDNA CRAM file by the SingleReadSNV pipeline",
    "optional": false
  },
  "MRDFeatureMap.cfdna_featuremap_index": {
    "description": "Respective index",
    "optional": false
  },
  "MRDFeatureMap.srsnv_test_X": {
    "description": "Parquet file of test set X matrix (SNV features) generated by the SingleReadSNV pipeline",
    "optional": false
  },
  "MRDFeatureMap.srsnv_test_y": {
    "description": "Parquet file of test set y vector (true/false values) generated by the SingleReadSNV pipeline",
    "optional": false
  },
  "MRDFeatureMap.srsnv_qual_test": {
    "description": "Parquet file of test set SNVQ values generated by the SingleReadSNV pipeline",
    "optional": false
  },
  "MRDFeatureMap.cfdna_cram_bam": {
    "description": "CRAM or BAM file of cfDNA sample, must be equal to the input used for the SingleReadSNV pipeline that generated cfdna_featuremap",
    "optional": false
  },
  "MRDFeatureMap.cfdna_cram_bam_index": {
    "description": "Respective index",
    "optional": false
  },
  "MRDFeatureMap.mapping_quality_threshold": {
    "description": "Mapping quality threshold for reads to be included in the coverage analysis, corresponding to the value used to filter the srsnv output",
    "optional": false
  },
  "MRDFeatureMap.external_matched_signatures": {
    "description": "Optional signatures matched to the patient from whom the cfDNA sample was taken, to be used as matched signatures in the MRD analysis, leave blank if running a healthy control donor",
    "optional": true
  },
  "MRDFeatureMap.external_control_signatures": {
    "description": "Optional signatures from other individuals to be used as controls in the MRD analysis",
    "optional": true
  },
  "MRDFeatureMap.bcftools_extra_args": {
    "description": "Extra argument given after the 'bcftools view' command that filters the matched and control signatures. E.g. '-f PASS' to filter only PASS variants.",
    "optional": false
  },
  "MRDFeatureMap.include_regions": {
    "description": "Genomic regions to include in the analysis, bed files are accepted",
    "optional": false
  },
  "MRDFeatureMap.exclude_regions": {
    "description": "Genomic regions to exclude from the analysis, bed and vcf[.gz] files are accepted",
    "optional": true
  },
  "MRDFeatureMap.mrd_analysis_params": {
    "description": "Parameters for the MRD analysis",
    "optional": false
  },
  "MRDFeatureMap.snv_database": {
    "description": "Somatic mutation database to use for generating control signatures",
    "optional": true
  },
  "MRDFeatureMap.n_synthetic_signatures": {
    "description": "Number of synthetic signatures to generate from the somatic mutation database. Set to 0 to disable generation of control signatures from the database.",
    "optional": true
  },
  "MRDFeatureMap.references": {
    "description": "Reference files: fasta, dict and fai, recommended value set in the template",
    "optional": false
  },
  "MRDFeatureMap.preemptible_tries": {
    "description" : "number of preemptible tries",
    "optional": true
  },
  "MRDFeatureMap.no_address_override":{
    "description" : "no_address_override",
    "optional": true
  },
  "MRDFeatureMap.cloud_provider_override": {
    "description": "cloud_provider_override",
    "optional": true
  },
  "MRDFeatureMap.monitoring_script_input": {
    "description": "monitoring_script_input",
    "optional": true
  }
}