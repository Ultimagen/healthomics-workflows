{
    "SingleCell.barcode_fastq_file_suffix": {
        "description": "Suffix to add to the name of the file with the barcode reads (in case downstream software has name requirements)",
        "optional": true
    },
    "SingleCell.barcode_fastq_header_suffix": {
        "description": "Suffix to add to the end of the fastq headers for the barcode reads (in case downstream software has fastq header requirements)",
        "optional": true
    },
    "SingleCell.base_file_name": {
        "description": "Base file name for output files. The output files will be named <tt>[base_file_name]*.fastq.gz</tt>",
        "optional": false
    },
    "SingleCell.cpu": {
        "description": "Number of CPUs to use (for Trimmer, conversion to fastq, and alignment tasks)",
        "optional": false
    },
    "SingleCell.demux_extra_args": {
        "description": "Extra parameters to pass to SortTasks.Demux , when converting to fastq",
        "optional": true
    },
    "SingleCell.downstream_analysis": {
        "description": "Can be either star_solo, star, or undefined (default)",
        "optional": true
    },
    "SingleCell.fastqc_adapter": {
        "description": "Adapter that can be passed to fastqc with the --adapters options",
        "optional": true
    },
    "SingleCell.fastqc_limits": {
        "description": "Adapter that can be passed to fastqc with the --limits option",
        "optional": true
    },
    "SingleCell.genome_generate_params": {
        "description": "Parameters that can be passed to the StarSolo or StarAlignment task, for formatting a STAR genome.  See input template",
        "optional": true
    },
    "SingleCell.input_file": {
        "description": "Input CRAM or BAM file",
        "optional": false
    },
    "SingleCell.insert_fastq_file_suffix": {
        "description": "Suffix to add to the name of the file with the insert reads (in case downstream software has name requirements)",
        "optional": true
    },
    "SingleCell.insert_fastq_header_suffix": {
        "description": "Suffix to add to the end of the fastq headers for the insert reads (in case downstream software has fastq header requirements)",
        "optional": true
    },
    "SingleCell.monitoring_script_input": {
        "description": "monitoring_script_input",
        "optional": true
    },
    "SingleCell.no_address": {
        "description": "Should the instances used be without external IP address. Allows for more parallelization, but not supported with Dockerhub dockers Default: true",
        "optional": false
    },
    "SingleCell.preemptible_tries": {
        "description": "Number of preemptible tries",
        "optional": false
    },
    "SingleCell.star_align_extra_args": {
        "description": "Extra parameters to pass to the StarAlignment task.  See input template",
        "optional": true
    },
    "SingleCell.star_align_gtf_override": {
        "description": "The gtf to use in the StarAlignment task.  See input template",
        "optional": true
    },
    "SingleCell.star_genome": {
        "description": "The genome to use in the StarAlignment task.  See input template",
        "optional": true
    },
    "SingleCell.star_solo_params": {
        "description": "Parameters for running the StarSolo task.  See input template",
        "optional": true
    },
    "SingleCell.trimmer_parameters": {
        "description": "Parameters for Trimmer task.  See input template",
        "optional": true
    },
    "SingleCell.trimmer_stats": {
        "description": "If trimmer was run outside of this workflow, the stats can still be combined in the final report",
        "optional": true
    }
}