{
    "GermlineCNVPipeline.CnmopsCNVCalling.cap_coverage_override": {
        "description": "whether to cap extremely high average coverage windows to 2*cohort's average coverage quantile 99.9% value",
        "optional": true
    },
    "GermlineCNVPipeline.CnmopsCNVCalling.chrX_name": {
        "description": "The name of the female sex chromosome in the genome. default is: chrX",
        "optional": true
    },
    "GermlineCNVPipeline.CnmopsCNVCalling.chrY_name": {
        "description": "The name of the male sex chromosome in the genome. default is: chrY",
        "optional": true
    },
    "GermlineCNVPipeline.CnmopsCNVCalling.input_bam_file": {
        "description": "Input sample BAM/CRAM file. one of the `input_bam_file`, `input_sample_reads_count` or `bed_graph` must be set",
        "optional": true
    },
    "GermlineCNVPipeline.CnmopsCNVCalling.input_bam_file_index": {
        "description": "Input sample BAI/CRAI index file",
        "optional": true
    },
    "GermlineCNVPipeline.CnmopsCNVCalling.input_sample_reads_count": {
        "description": "Inputs sample windowed coverage stored as GenomicRanges object in rds file. can be calculated using cn.mops::getReadCountsFromBAM R function.  one of the `input_bam_file`, `input_sample_reads_count` or `bed_graph` must be set",
        "optional": true
    },
    "GermlineCNVPipeline.CnmopsCNVCalling.preemptible_tries_override": {
        "description": "Number of preemptible tries,default is: 1",
        "optional": true
    },
    "GermlineCNVPipeline.CnmopsCNVCalling.save_csv_override": {
        "description": "Whether to save sample reads counts/cohort including sample/cnmops output data in csv format (additionally to RDS format). Default is: False.",
        "optional": true
    },
    "GermlineCNVPipeline.CnmopsCNVCalling.save_hdf_override": {
        "description": "Whether to save sample reads counts/cohort including sample/cnmops output data in hdf5 format (additionally to RDS format). Default is: False.",
        "optional": true
    },
    "GermlineCNVPipeline.CombineGermlineCNVCalls.cnvpytor_precent_gaps_threshold_override": {
        "description": "Threshold for pN (fraction of reference genome gaps (N's) in call region) for cnvpytor calls. default=0.9",
        "optional": true
    },
    "GermlineCNVPipeline.CombineGermlineCNVCalls.deletions_length_cutoff_override": {
        "description": "Minimum length of deletions to be considered without jalign support. default=3000",
        "optional": true
    },
    "GermlineCNVPipeline.CombineGermlineCNVCalls.distance_threshold_override": {
        "description": "Distance threshold for merging CNV calls. default=1500",
        "optional": true
    },
    "GermlineCNVPipeline.CombineGermlineCNVCalls.duplication_length_cutoff_for_cnmops_filter_override": {
        "description": "Minimum length of duplications to be considered for cn.mops calls. default=10000",
        "optional": true
    },
    "GermlineCNVPipeline.CombineGermlineCNVCalls.jalign_min_mismatches_override": {
        "description": "Minimum number of mismatches for jalign to consider a read as supporting a CNV candidate. default=1",
        "optional": true
    },
    "GermlineCNVPipeline.CombineGermlineCNVCalls.jalign_written_cutoff_override": {
        "description": "Minimal number of supporting jaligned reads for deletions. default=1",
        "optional": true
    },
    "GermlineCNVPipeline.CombineGermlineCNVCalls.preemptible_tries_override": {
        "description": "Number of preemptible tries,default is: 1",
        "optional": true
    },
    "GermlineCNVPipeline.base_file_name": {
        "description": "Sample name",
        "optional": false
    },
    "GermlineCNVPipeline.bed_graph": {
        "description": "Previously calculated input bedGraph files holding the coverage per base (outputs with the sequencing data).",
        "optional": false
    },
    "GermlineCNVPipeline.cnmops_intersection_cutoff_override": {
        "description": "Intersection cutoff with UG-CNV-LCR regions to filter out CNV calls. Default is:  0.5",
        "optional": true
    },
    "GermlineCNVPipeline.cnmops_mapq_override": {
        "description": "Reads mapping-quality cutoff for coverage aggregation used in cn.mops, default value is 1",
        "optional": true
    },
    "GermlineCNVPipeline.cnmops_min_cnv_length_override": {
        "description": "Minimum length for reporting CNV. Default is: 0",
        "optional": true
    },
    "GermlineCNVPipeline.cnmops_min_width_value_override": {
        "description": "Minimum of consecutive windows with a significant signal to consider for CNV reporting. Default is: 2",
        "optional": true
    },
    "GermlineCNVPipeline.cnmops_parallel_override": {
        "description": "Number of cpus for cn.mops run. Default value is 4",
        "optional": true
    },
    "GermlineCNVPipeline.cnmops_window_length_override": {
        "description": "Window length on which the read counts will be aggregated, default value is 500",
        "optional": true
    },
    "GermlineCNVPipeline.cnvpytor_mapq_override": {
        "description": "Reads mapping-quality cutoff for coverage aggregation used in cnvpytor, default value is 0",
        "optional": true
    },
    "GermlineCNVPipeline.cnvpytor_window_length_override": {
        "description": "Window length on which the read counts will be aggregated, default value is 500",
        "optional": true
    },
    "GermlineCNVPipeline.cohort_reads_count_matrix": {
        "description": "GenomicRanges object of the cohort reads count matrix in rds file format. default cohort can be found in the template.",
        "optional": false
    },
    "GermlineCNVPipeline.create_md5_checksum_outputs": {
        "description": "Create md5 checksum for requested output files",
        "optional": true
    },
    "GermlineCNVPipeline.disable_mod_cnv": {
        "description": "whether to call moderate cnvs (Fold-Change~1.5 will be tagged as CN2.5 and Fold-Change~0.7 will be tagged as CN1.5). Default is: True",
        "optional": true
    },
    "GermlineCNVPipeline.genome_windows": {
        "description": "Bed file of the genome binned to equal sized windows similar to the cohort_reads_count_matrix.",
        "optional": false
    },
    "GermlineCNVPipeline.input_bam_file": {
        "description": "Input sample BAM/CRAM file",
        "optional": false
    },
    "GermlineCNVPipeline.input_bam_file_index": {
        "description": "Input sample BAI/CRAI index file",
        "optional": false
    },
    "GermlineCNVPipeline.merged_cohort_ploidy_file": {
        "description": "Merged cohort ploidy file in bed format",
        "optional": false
    },
    "GermlineCNVPipeline.monitoring_script_input": {
        "description": "monitoring_script_input",
        "optional": true
    },
    "GermlineCNVPipeline.no_address_override": {
        "description": "no_address_override",
        "optional": true
    },
    "GermlineCNVPipeline.preemptible_tries_override": {
        "description": "preemptible_tries_override",
        "optional": true
    },
    "GermlineCNVPipeline.ref_seq_names": {
        "description": "Chromosome names for which coverage will be calculated",
        "optional": false
    },
    "GermlineCNVPipeline.reference_genome": {
        "description": "Genome fasta file associated with the CRAM file",
        "optional": false
    },
    "GermlineCNVPipeline.reference_genome_index": {
        "description": "Fai index of the fasta file",
        "optional": false
    },
    "GermlineCNVPipeline.skip_figure_generation": {
        "description": "Skip CNV calls figure generation. please set to True if reference genome is not hg38. Default is: False",
        "optional": true
    },
    "GermlineCNVPipeline.ug_cnv_lcr_file": {
        "description": "UG-CNV-LCR bed file",
        "optional": true
    }
}